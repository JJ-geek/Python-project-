import sys
from PyQt6.QtWidgets import QApplication, QMainWindow, QLabel, QLineEdit, QPushButton, QVBoxLayout, QWidget


class StaffInformationWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Staff Information Management")
        self.setGeometry(100, 100, 400, 300)

        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)

        self.layout = QVBoxLayout()
        self.central_widget.setLayout(self.layout)

        self.label_name = QLabel("Name:")
        self.layout.addWidget(self.label_name)
        self.line_edit_name = QLineEdit()
        self.layout.addWidget(self.line_edit_name)

        self.label_contact = QLabel("Contact Information:")
        self.layout.addWidget(self.label_contact)
        self.line_edit_contact = QLineEdit()
        self.layout.addWidget(self.line_edit_contact)

        self.label_employment = QLabel("Employment History:")
        self.layout.addWidget(self.label_employment)
        self.line_edit_employment = QLineEdit()
        self.layout.addWidget(self.line_edit_employment)

        self.button_save = QPushButton("Save")
        self.button_save.clicked.connect(self.save_staff_information)
        self.layout.addWidget(self.button_save)

    def save_staff_information(self):
        name = self.line_edit_name.text()
        contact = self.line_edit_contact.text()
        employment = self.line_edit_employment.text()

        # Save the staff information to the database or perform other operations

        # Clear the input fields
        self.line_edit_name.clear()
        self.line_edit_contact.clear()
        self.line_edit_employment.clear()


class CourseSwitchWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Course Switch")
        self.setGeometry(100, 100, 400, 300)

        # Add the necessary widgets and logic for course switch functionality


class GradesWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("School Grades")
        self.setGeometry(100, 100, 400, 300)

        # Add the necessary widgets and logic for grades functionality


class IDCardWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Student ID Cards")
        self.setGeometry(100, 100, 400, 300)

        # Add the necessary widgets and logic for ID card generation functionality


class ReportCardWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Student Report Cards")
        self.setGeometry(100, 100, 400, 300)

        # Add the necessary widgets and logic for report card generation functionality


class CoursesTaughtWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Courses Taught")
        self.setGeometry(100, 100, 400, 300)

        # Add the necessary widgets and logic to display courses taught


class StudentEnrollmentWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Student Enrollment")
        self.setGeometry(100, 100, 400, 300)

        # Add the necessary widgets and logic to display the number of students enrolled


class StudentMarksWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Student Marks")
        self.setGeometry(100, 100, 400, 300)

        # Add the necessary widgets and logic for student marks functionality


class PersonalInfoWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Personal Information")
        self.setGeometry(100, 100, 400, 300)

        # Add the necessary widgets and logic for personal information modification


class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Staff Management System")
        self.setGeometry(100, 100, 400, 300)

        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)

        self.layout = QVBoxLayout()
        self.central_widget.setLayout(self.layout)
self.central_widget.setStyleSheet("background-color: orange ;")

        self.button_staff_info = QPushButton("Staff Information")
        self.button_staff_info.clicked.connect(self.open_staff_info_window)
        self.layout.addWidget(self.button_staff_info)

        self.button_course_switch = QPushButton("Course Switch")
        self.button_course_switch.clicked.connect(self.open_course_switch_window)
        self.layout.addWidget(self.button_course_switch)

        self.button_grades = QPushButton("School Grades")
        self.button_grades.clicked.connect(self.open_grades_window)
        self.layout.addWidget(self.button_grades)

        self.button_id_card = QPushButton("Student ID Cards")
        self.button_id_card.clicked.connect(self.open_id_card_window)
        self.layout.addWidget(self.button_id_card)
        self.button_report_card = QPushButton("Student Report Cards")
        self.button_report_card.clicked.connect(self.open_report_card_window)
        self.layout.addWidget(self.button_report_card)

        self.button_courses_taught = QPushButton("Courses Taught")
        self.button_courses_taught.clicked.connect(self.open_courses_taught_window)
        self.layout.addWidget(self.button_courses_taught)

        self.button_student_enrollment = QPushButton("Student Enrollment")
        self.button_student_enrollment.clicked.connect(self.open_student_enrollment_window)
        self.layout.addWidget(self.button_student_enrollment)

        self.button_student_marks = QPushButton("Student Marks")
        self.button_student_marks.clicked.connect(self.open_student_marks_window)
        self.layout.addWidget(self.button_student_marks)

        self.button_personal_info = QPushButton("Personal Information")
        self.button_personal_info.clicked.connect(self.open_personal_info_window)
        self.layout.addWidget(self.button_personal_info)

    def open_staff_info_window(self):
        self.staff_info_window = StaffInformationWindow()
        self.staff_info_window.show()

    def open_course_switch_window(self):
        self.course_switch_window = CourseSwitchWindow()
        self.course_switch_window.show()

    def open_grades_window(self):
        self.grades_window = GradesWindow()
        self.grades_window.show()

    def open_id_card_window(self):
        self.id_card_window = IDCardWindow()
        self.id_card_window.show()

    def open_report_card_window(self):
        self.report_card_window = ReportCardWindow()
        self.report_card_window.show()

    def open_courses_taught_window(self):
        self.courses_taught_window = CoursesTaughtWindow()
        self.courses_taught_window.show()

    def open_student_enrollment_window(self):
        self.student_enrollment_window = StudentEnrollmentWindow()
        self.student_enrollment_window.show()

    def open_student_marks_window(self):
        self.student_marks_window = StudentMarksWindow()
        self.student_marks_window.show()

    def open_personal_info_window(self):
      self.personal_info_window = PersonalInfoWindow()
      self.personal_info_window.show()


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec())
